server:
  port: 8082
  servlet:
    context-path: /notification

spring:
  datasource:
    url: "jdbc:mysql://localhost:3306/Data_Firstt"
    driverClassName: "com.mysql.cj.jdbc.Driver"
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
  application:
    name: notification-service
  neo4j:
    uri: bolt://localhost:7687
    authentication:
      username: neo4j
      password: 12345678

  data:
    mongodb:
      uri: mongodb://root:root@localhost:27017/notification-service?authSource=admin

  kafka:
    bootstrap-servers: localhost:9094
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    admin:
      auto-create: true  # Tự động tạo topic nếu cần thiết

jwt:
  signerKey: "1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij"
  valid-duration: 3600  # in seconds
  refreshable-duration: 720000  # in seconds

notification:
  email:
    brevo-url: https://api.brevo.com
    brevo-apikey: "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"

mail:
  host: smtp.gmail.com
  port: 587
  username: dangngocduong2509@gmail.com
  password: qenz zvxi qzdy lupo
  properties:
    mail:
      smtp:
        auth: true
        starttls:
          enable: true
