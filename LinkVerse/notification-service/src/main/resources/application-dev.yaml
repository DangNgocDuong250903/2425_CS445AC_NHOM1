spring:
  config:
    activate:
      on-profile: dev
  data:
    mongodb:
      uri: mongodb://root:root@localhost:27017/notification-service?authSource=admin
  datasource:
    url: "jdbc:mysql://localhost:3306/notification"
    driverClassName: "com.mysql.cj.jdbc.Driver"
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
  neo4j:
    uri: bolt://localhost:7687
    authentication:
      username: neo4j
      password: 12345678
  kafka:
    bootstrap-servers: localhost:9094
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    admin:
      auto-create: true  # Tự động tạo topic nếu cần thiết

notification:
  email:
    brevo-url: https://api.brevo.com
    brevo-apikey: "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"

mail:
  host: smtp.gmail.com
  port: 587
  username: ${MAIL_USERNAME}
  password: ${MAIL_PASSWORD}
  properties:
    mail:
      smtp:
        auth: true
        starttls:
          enable: true

jwt:
  signerKey: "1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij"
  valid-duration: 3600  # in seconds
  refreshable-duration: 720000  # in seconds

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
openapi:
  service:
    api-docs: notification-service
    server: http://localhost:${server.port}
    title: Notification service
    version: 1.0.0